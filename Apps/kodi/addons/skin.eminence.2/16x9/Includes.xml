<includes>

    <include file="Defaults.xml" />
    <include condition="!Skin.HasSetting(global.widescreen)" file="Constants_Padded.xml" />
    <include condition="Skin.HasSetting(global.widescreen)" file="Constants_WideScreen.xml" />
    <include file="Includes_Animation.xml" />
    <include file="Includes_Defs.xml" />
    <include file="Includes_Dialog.xml" />
    <include file="Includes_Furniture.xml" />
    <include file="Includes_Home.xml" />
    <include file="Includes_Info.xml" />
    <include file="Includes_Image.xml" />
    <include file="Includes_Label.xml" />
    <include file="Includes_Object.xml" />
    <include file="Includes_PVR.xml" />
    <include file="Includes_Window.xml" />
    <include file="Includes_VideoLyrics.xml" />
    <include file="script-skinshortcuts-includes.xml"/>
    <include file="Viewtype_List.xml" />
    <include file="Viewtype_Icon.xml" />
    <include file="Viewtype_BigIcon.xml" />
    <include file="Viewtype_ShowCase.xml" />

    <!-- GLOBALS -->
    <include name="GlobalOverlay">
        <control type="image">
            <left>0</left>
            <top>0</top>
            <width>100%</width>
            <height>100%</height>
            <texture colordiffuse="9f000000">common/white.png</texture>
            <animation effect="fade" start="0" end="100" time="200">VisibleChange</animation>
            <animation effect="fade" start="0" end="100" time="200">WindowOpen</animation>
            <animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
        </control>
    </include>

    <!-- VARS -->
    <variable name="HighlightColor">
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(MusicVisualisation.xml)] + !String.IsEmpty(Skin.String(HighlightColor))">$INFO[Skin.String(HighlightColor)]</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(MusicVisualisation.xml)]">Highlight</value>
        <value condition="Skin.HasSetting(home.tilecolor) + !String.IsEmpty(Window(home).Property(HighlightColor))">$INFO[Window(home).Property(HighlightColor)]</value>
        <value condition="!String.IsEmpty(Skin.String(HighlightColor))">$INFO[Skin.String(HighlightColor)]</value>
        <value>Highlight</value>
    </variable>
    <variable name="HighlightColor2">
        <value condition="!String.IsEmpty(Skin.String(HighlightColor2))">$INFO[Skin.String(HighlightColor2)]</value>
        <value>Highlight2</value>
    </variable>

</includes>
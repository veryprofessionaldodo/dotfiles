Disclaimer: This helps me, but you might want/have a different configuration, so use this just as a "quick guide", but definitively go to the Arch Wiki to learn more :)

# Installing Arch

### Load pt keys with:

loadkeys pt-latin1

### Make sure it is in UEFI. To do this write: 

ls /sys/firmware/efi/efivars

### If there are results everything is nice.

### Establish network connection, maybe use cable for this one, a lot easier

timedatectl set-ntp true

### To list partitions, use: 

lsblk

### There needs to be:
### - A /mnt/boot or /mnt/efi with 260-512 MB;
### - A /mnt which is the entirety of the device;
### - A swap, make it around 1.25* of RAM, that should do it (a lot of varying opinions on this);

### Check what is the drive you are going to install Artix on, and run:

sudo cfdisk /dev/drive

### Now we need to create three main partitions:
### - A /mnt/boot or /mnt/efi with 260-512 MB (select Linux EFI for the type);
### - A swap, make it around 1.25* of RAM, that should do it (a lot of varying opinions on this, select Linux Swap for type);
### - A /mnt which is the rest of the entire;

### Now we need to assign the correct filesystems to the partitions, using:

mkfs.fat -F32 /dev/efidrive
mkfs.xfs /dev/root (or mkfs.ext4)
mkswap /dev/swap
swapon /dev/swap

### Now we need to mount the partitions using:

mount /dev/sdXY /mnt/boot
mount /dev/sdXZ /mnt/

### where XY is the partition for the boot and XZ is the root partition.
### Now just make sure everything is setup nicely running: 

lsblk

### Now to install Arch!

pacstrap /mnt base base-devel linux linux-firmware nano (more programs you want to install)

### Now that we have Arch Linux installed, we need to generate our file system tab, stored in /etc/fstab. For this we run: 

genfstab /mnt >> /mnt/etc/fstab

### Let's hop into our Arch Linux installation: 

arch-chroot /mnt

### Nice, we're getting there. Now to install GRUB

pacman -S grub (and efibootmgr if you have UEFI) os-prober

### All that's left is installing and configuring grub.

grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Artix_GRUB
grub-mkconfig -o /boot/grub/grub.cfg

### Hopefully nothing failed! If everything worked alright, then we can now configure our system!
### First, let's configure the time zone:

ln -sf /usr/share/zoneinfo/Europe/Lisbon /etc/localtime
hwclock --systohc 

### Setup a password using: 

passwd

### Setup locale:

nano /etc/locale.gen

(uncomment locale you want, like en_GB things)

nano /etc/locale.conf 

(add LANG=en_GB.UTF-8) 

locale-gen

nano /etc/vconsole.conf 

(add KEYMAP=pt-latin1, change it to whatever keymap you want)

### Timezone information 

ln -sf /usr/share/zoneinfo/ZONEOFYOURCHOOSING /etc/localtime

### Now setup hostname 

nano /etc/hostname 

(add a single word to be your hostname)

nano /etc/hosts

(add this, and replace myhostname with the word you wrote above)

127.0.0.1	localhost
127.0.1.1	myhostname
::1		localhost ip6-localhost ip6-loopback

### Configure a NetworkManager

sudo pacman -S networkmanager
sudo systemctl enable NetworkManager

### Now create the user:

useradd -m -g wheel username (change this to what you want)

passwd username 

### Edit the /etc/sudoers file and uncomment the %wheel statement to allow for sudo access

### Arch is installed! Exit your arch-chroot by entering 'exit', and then do 'umount -R /mnt' to unmount all partitions.

### Reboot, and then in the new Arch Linux install edit the /etc/pacman.conf, and uncomment multilib:

### Now exit, log into your user and setup basic folder structure: 

cd ~

mkdir Documents Downloads Games Desktop Media

mkdir Media/Pictures Media/Music Media/Videos

sudo pacman -S git 

### Then clone this repo, and after this, I made a script to automate everything :) and run the archFullSetup, and you're good to go!


Disclaimer: This helps me, but you might want/have a different configuration, so use this just as a "quick guide", but definitively go to the Arch Wiki to learn more :)

# Installing Artix Linux

### Load pt keys with:

loadkeys pt-latin1

### Make sure it is in UEFI. To do this write: 

ls /sys/firmware/efi/efivars

### If there are results everything is nice.

### To list partitions, use: 

fdisk -l

### There needs to be:
### - A /mnt/boot or /mnt/efi with 260-512 MB;
### - A /mnt which is the entirety of the device;
### - A swap, make it around 1.25* of RAM, that should do it (a lot of varying opinions on this);

### Check what is the drive you are going to install Artix on, and run:

sudo cfdisk /dev/drive

### Now we need to create three main partitions:
### - A /mnt/boot or /mnt/efi with 260-512 MB (select Linux EFI for the type);
### - A swap, make it around 1.25* of RAM, that should do it (a lot of varying opinions on this, select Linux Swap for type);
### - A /mnt which is the rest of the entire;

### Now we need to assign the correct filesystems to the partitions, using:

mkfs.fat -F32 /dev/efidrive
mkfs.ext4 /dev/root
mkswap /dev/swap
swapon /dev/swap

### Mount the partitions, with:

mount /dev/root /mnt
mkdir /mnt/boot
mount /dev/efi /mnt/boot

### Now to install Artix!

basestrap /mnt base base-devel runit elogind-runit linux linux-firmware (more programs you want to install)

### Now that we have it installed, we need to generate our file system tab, stored in /etc/fstab. For this we run: 

fstabgen /mnt >> /mnt/etc/fstab  

### Let's hop into our Artix Linux installation: 

artix-chroot /mnt

### First of all, we need to install the GRUB bootloader, and we can do this with:

pacman -S grub efibootmgr os-prober

### For the configuration of GRUB for UEFI systems, we will run:

grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Artix_GRUB
grub-mkconfig -o /boot/grub/grub.cfg

### Hopefully nothing failed! If everything worked alright, then we can now configure our system!
### First, let's configure the time zone:

ln -sf /usr/share/zoneinfo/Europe/Lisbon /etc/localtime
hwclock --systohc 

### For the locales, we need to uncomment the lines we need in the file /etc/locale.gen, and the run:

locale-gen

### Now add the line to the file /etc/locale.conf:

LANG=pt_PT.UTF-8 (or other languages you might have installed)

### The last step for the language configuration is the keyboard layout, and add the follwing line to /etc/vconsole.conf:

KEYMAP=pt-latin1 (or other layout you want)

### For Internet connection we need to modify two files:

nano /etc/hostname 
(add to the file the name you want)

nano /etc/hosts 
(
    add to the file this:

    127.0.0.1 localhost
    127.0.1.1 hostname_you_chose
    ::1 localhost
)

### Now we need to configure the network manager for runit, and first we need to install the following packages: 

sudo pacman -s networkmanager networkmanager-runit network-manager-applet 

### Services are different compared to systemd, so now instead of running "systemctl enable NetworkManager" we can either:

### Reboot, and link the services you want by using:
ln -s /etc/runit/sv/service /run/runit/service (in this case /etc/runit/sv/NetworkManager)

### or if you don't want to reboot, we can do it now with: 
ln -s /etc/runit/sv/service /etc/runit/runsvdir/current

### For the users part, we first need to configure the root password, with:

passwd

### For other user, run:

useradd -mG wheel name
passwd name 

### Add the user to sudoers group, by uncommenting the %wheel statement in the /etc/sudoers file.

### Edit the /etc/pacman.conf file, and uncomment "color", and the multilib repository.

### Nearly there! Install the correct drivers for your PC and fonts, in my case: 

sudo pacman -S xf86-video-amdgpu mesa xorg-server xorg-xinit xorg-xrandr xorg-fonts ttf-inconsolata noto-fonts ttf-linux-libertine

### Now you can exit, login to your new computer and run the base script!

./artix-setup

### You should be good to go :)

Add to sudoers group, and uncomment the wheel group.

Install git for downloading repos

# sudo pacman -S git 

Install yay 

# git clone https://aur.archlinux.org/yay.git
# cd yay
# makepkg -si

Install fonts
# ttf-inconsolata noto-fonts ttf-linux-libertine

Install and setup awesome

# sudo pacman -S awesome
# echo exec awesome >> /home/user/.xinitrc